apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: tpcds-benchmark-data-generation
  namespace: data-lake
spec:
  type: Scala
  image: seedjeffwan/spark:v2.4.5-examples
  sparkVersion: 2.4.5
  mainClass: com.amazonaws.eks.tpcds.DataGeneration
  mainApplicationFile: local:///opt/spark/examples/jars/eks-spark-benchmark-assembly-1.0.jar
  mode: cluster
  arguments:
  # TPC-DS data localtion
    - "s3a://data-lake-bucket"
  # Path to kit in the docker image
    - "/opt/tpcds-kit/tools"
  # Data Format
    - "parquet"
  # Scale factor (in GB)
    - "1"
  # Generate data num partitions
    - "10"
  # Create the partitioned fact tables
    - "false"
  # Shuffle to get partitions coalesced into single files.
    - "false"
  # Logging set to WARN
    - "true"
  sparkConf:
    "spark.speculation": "false"
    "spark.network.timeout": "2400"    
    # S3 Configs
    "spark.hadoop.fs.s3a.endpoint": "http://minio:9000"
    "spark.hadoop.fs.s3a.connection.timeout": "1200000"
    "spark.hadoop.fs.s3a.connection.ssl.enabled": "false"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.maximum": "200"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    "spark.hadoop.fs.s3a.readahead.range": "256K"
    "spark.hadoop.fs.s3a.input.fadvise": "random"
    "spark.hadoop.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    # S3A Committer
    "spark.hadoop.mapreduce.outputcommitter.factory.scheme.s3a": "org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory"
    # "spark.sql.sources.commitProtocolClass": "org.apache.spark.internal.io.cloud.PathOutputCommitProtocol"
    # "spark.sql.parquet.output.committer.class": "org.apache.hadoop.mapreduce.lib.output.BindingPathOutputCommitter"
    "spark.hadoop.fs.s3a.committer.name": "directory"
    "spark.hadoop.fs.s3a.committer.staging.conflict-mode": "append"
    "spark.kubernetes.driver.secretKeyRef.AWS_ACCESS_KEY_ID" : "data-lake:s3-access"
    "spark.kubernetes.driver.secretKeyRef.AWS_SECRET_ACCESS_KEY" : "data-lake:s3-secret"
    "spark.kubernetes.executor.secretKeyRef.AWS_ACCESS_KEY_ID" : "data-lake:s3-access"
    "spark.kubernetes.executor.secretKeyRef.AWS_SECRET_ACCESS_KEY" : "data-lake:s3-secret"
  driver:
    cores: 1
    coreLimit: "1"
    memory: "1000m"
    serviceAccount: spark-operator
  executor:
    instances: 1
    cores: 1
    memory: "2000m"
    memoryOverhead: 2g
  restartPolicy:
    type: Never
